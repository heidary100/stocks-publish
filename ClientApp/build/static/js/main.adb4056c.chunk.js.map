{"version":3,"sources":["components/api-authorization/ApiAuthorizationConstants.js","components/api-authorization/AuthorizeService.js","components/api-authorization/LoginMenu.js","components/NavMenu.js","components/Layout.js","components/Chart.js","components/utils.js","components/Home.js","components/FetchData.js","components/Counter.js","components/api-authorization/AuthorizeRoute.js","components/api-authorization/Login.js","components/api-authorization/Logout.js","components/api-authorization/ApiAuthorizationRoutes.js","App.js","index.js"],"names":["ApplicationName","QueryParameterNames","LogoutActions","LoginActions","prefix","ApplicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","AuthorizeService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","a","this","getUser","user","profile","ensureUserManagerInitialized","userManager","access_token","state","signinSilent","createArguments","silentUser","updateState","success","console","log","Error","signinPopup","popUpUser","message","error","signinRedirect","redirect","url","signinCallback","signoutPopup","undefined","signoutRedirect","signoutCallback","response","data","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","status","AuthenticationResultStatus","Fail","Success","Redirect","fetch","ok","json","settings","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","removeUser","authService","LoginMenu","props","isAuthenticated","userName","_subscription","subscribe","populateState","unsubscribe","Promise","all","setState","name","profilePath","logoutPath","pathname","local","authenticatedView","registerPath","loginPath","anonymousView","NavItem","NavLink","tag","Link","className","to","Component","NavMenu","toggleNavbar","bind","collapsed","Navbar","light","Container","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","navbar","displayName","Layout","children","CandleStickChart","type","width","ratio","xAccessor","d","date","xExtents","last","height","margin","left","right","top","bottom","seriesName","xScale","scaleTime","id","yExtents","high","low","axisAt","orient","ticks","timeIntervalBarWidth","utcDay","React","defaultProps","fitWidth","parseDate","timeParse","Home","then","text","tsvParse","parse","open","close","volume","Chart","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","getAccessToken","token","headers","forecast","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","AuthorizeRoute","ready","authenticated","authenticationChanged","populateAuthenticationState","link","document","createElement","href","path","returnUrl","protocol","host","search","hash","redirectUrl","encodeURI","component","rest","render","action","login","getReturnUrl","processLoginCallback","URLSearchParams","window","location","get","redirectToProfile","redirectToRegister","signIn","result","navigateToReturnUrl","completeSignIn","fromQuery","startsWith","origin","redirectToApiAuthorizationPath","apiAuthorizationPath","replace","Logout","isReady","history","logout","processLogoutCallback","signOut","completeSignOut","ApiAuthorizationRoutes","loginAction","logoutAction","App","exact","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename"],"mappings":"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","file":"static/js/main.adb4056c.chunk.js","sourcesContent":["export const ApplicationName = 'khosravi_webapi_react';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const ApplicationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { ApplicationPaths, ApplicationName } from './ApiAuthorizationConstants';\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    // We try to authenticate the user in three different ways:\r\n    // 1) We try to see if we can authenticate the user silently. This happens\r\n    //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n    //    on the client.\r\n    // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n    //    redirect flow.\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const silentUser = await this.userManager.signinSilent(this.createArguments());\r\n            this.updateState(silentUser);\r\n            return this.success(state);\r\n        } catch (silentError) {\r\n            // User might not be authenticated, fallback to popup authentication\r\n            console.log(\"Silent authentication error: \", silentError);\r\n\r\n            try {\r\n                if (this._popUpDisabled) {\r\n                    throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n                }\r\n\r\n                const popUpUser = await this.userManager.signinPopup(this.createArguments());\r\n                this.updateState(popUpUser);\r\n                return this.success(state);\r\n            } catch (popUpError) {\r\n                if (popUpError.message === \"Popup window closed\") {\r\n                    // The user explicitly cancelled the login action by closing an opened popup.\r\n                    return this.error(\"The user closed the window.\");\r\n                } else if (!this._popUpDisabled) {\r\n                    console.log(\"Popup authentication error: \", popUpError);\r\n                }\r\n\r\n                // PopUps might be blocked by the user, fallback to redirect\r\n                try {\r\n                    await this.userManager.signinRedirect(this.createArguments(state));\r\n                    return this.redirect();\r\n                } catch (redirectError) {\r\n                    console.log(\"Redirect authentication error: \", redirectError);\r\n                    return this.error(redirectError);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n        }\r\n\r\n        let settings = await response.json();\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from './AuthorizeService';\r\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\nexport class LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            userName: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.populateState());\r\n        this.populateState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    async populateState() {\r\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n        this.setState({\r\n            isAuthenticated,\r\n            userName: user && user.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, userName } = this.state;\r\n        if (!isAuthenticated) {\r\n            const registerPath = `${ApplicationPaths.Register}`;\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(registerPath, loginPath);\r\n        } else {\r\n            const profilePath = `${ApplicationPaths.Profile}`;\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, profilePath, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, profilePath, logoutPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={profilePath}>Hello {userName}</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>Logout</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(registerPath, loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={registerPath}>Register</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>Login</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LoginMenu } from './api-authorization/LoginMenu';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">khosravi_webapi_react</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem>\r\n                <LoginMenu>\r\n                </LoginMenu>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChart extends React.Component {\n\trender() {\n\t\tconst { type, width, data, ratio } = this.props;\n\t\tconst xAccessor = d => d.date;\n\t\tconst xExtents = [\n\t\t\txAccessor(last(data)),\n\t\t\txAccessor(data[data.length - 100])\n\t\t];\n\t\treturn (\n\t\t\t<ChartCanvas height={400}\n\t\t\t\t\tratio={ratio}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tmargin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\t\tdata={data}\n\t\t\t\t\txAccessor={xAccessor}\n\t\t\t\t\txScale={scaleTime()}\n\t\t\t\t\txExtents={xExtents}>\n\n\t\t\t\t<Chart id={1} yExtents={d => [d.high, d.low]}>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\n\t\t\t\t\t<CandlestickSeries width={timeIntervalBarWidth(utcDay)}/>\n\t\t\t\t</Chart>\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChart.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChart.defaultProps = {\n\ttype: \"svg\",\n};\nCandleStickChart = fitWidth(CandleStickChart);\n\nexport default CandleStickChart;\n","import { tsvParse, csvParse } from  \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\nfunction parseData(parse) {\n\treturn function(d) {\n\t\td.date = parse(d.date);\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\n\t\treturn d;\n\t};\n}\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\n\nexport function getData() {\n\tconst promiseMSFT = fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\n\t\t.then(response => response.text())\n\t\t.then(data => tsvParse(data, parseData(parseDate)))\n\treturn promiseMSFT;\n}\n","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport Chart from './Chart';\r\nimport { getData } from \"./utils\"\r\n\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    componentDidMount() {\r\n        getData().then(data => {\r\n            this.setState({ data })\r\n        })\r\n    }\r\n    render() {\r\n        if (this.state == null) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <TypeChooser>\r\n                {type => <Chart type={type} data={this.state.data} />}\r\n            </TypeChooser>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport authService from './api-authorization/AuthorizeService'\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const token = await authService.getAccessToken();\r\n    const response = await fetch('weatherforecast', {\r\n      headers: !token ? {} : { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from './ApiAuthorizationConstants'\r\nimport authService from './AuthorizeService'\r\n\r\nexport default class AuthorizeRoute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ready: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.authenticationChanged());\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    render() {\r\n        const { ready, authenticated } = this.state;\r\n        var link = document.createElement(\"a\");\r\n        link.href = this.props.path;\r\n        const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n        const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(returnUrl)}`\r\n        if (!ready) {\r\n            return <div></div>;\r\n        } else {\r\n            const { component: Component, ...rest } = this.props;\r\n            return <Route {...rest}\r\n                render={(props) => {\r\n                    if (authenticated) {\r\n                        return <Component {...props} />\r\n                    } else {\r\n                        return <Redirect to={redirectUrl} />\r\n                    }\r\n                }} />\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ ready: true, authenticated });\r\n    }\r\n\r\n    async authenticationChanged() {\r\n        this.setState({ ready: false, authenticated: false });\r\n        await this.populateAuthenticationState();\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return (<div>Processing login</div>);\r\n                case LoginActions.LoginCallback:\r\n                    return (<div>Processing login callback</div>);\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<div></div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from './AuthorizeService';\r\nimport { AuthenticationResultStatus } from './AuthorizeService';\r\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from './ApiAuthorizationConstants';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.state.local) {\r\n                    this.logout(this.getReturnUrl());\r\n                } else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: \"You successfully logged out!\" });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return (<div>{message}</div>);\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return (<div>Processing logout</div>);\r\n                case LogoutActions.LogoutCallback:\r\n                    return (<div>Processing logout callback</div>);\r\n                case LogoutActions.LoggedOut:\r\n                    return (<div>{message}</div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: \"You successfully logged out!\" });\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Login } from './Login'\r\nimport { Logout } from './Logout'\r\nimport { ApplicationPaths, LoginActions, LogoutActions } from './ApiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={ApplicationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={ApplicationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={ApplicationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={ApplicationPaths.Profile} render={() => loginAction(LoginActions.Profile)} />\r\n          <Route path={ApplicationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={ApplicationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={ApplicationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={ApplicationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport AuthorizeRoute from './components/api-authorization/AuthorizeRoute';\r\nimport ApiAuthorizationRoutes from './components/api-authorization/ApiAuthorizationRoutes';\r\nimport { ApplicationPaths } from './components/api-authorization/ApiAuthorizationConstants';\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <AuthorizeRoute path='/fetch-data' component={FetchData} />\r\n        <Route path={ApplicationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\n// Uncomment the line above that imports the registerServiceWorker function\r\n// and the line below to register the generated service worker.\r\n// By default create-react-app includes a service worker to improve the\r\n// performance of the application by caching static assets. This service\r\n// worker can interfere with the Identity UI, so it is\r\n// disabled by default when Identity is being used.\r\n//\r\n//registerServiceWorker();\r\n\r\n"],"sourceRoot":""}